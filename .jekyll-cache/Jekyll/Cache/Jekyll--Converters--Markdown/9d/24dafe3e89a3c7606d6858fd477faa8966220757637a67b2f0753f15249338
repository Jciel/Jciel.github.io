I"p\<p><br /></p>

<p>VueJS já se consolidou como um ótimo framework para criação de interfaces web e SPA’s, o foco do Vue é a criação de 
componentes independentes e reutilizáveis, cada componente contém seu próprio layout, estilo e lógica. Nesse artigo 
tentarei mostrar um pouco mais sobre componentes dinâmicos, então assume um conhecimento inicial de Vue como criação de 
componentes, Single File Components (SFC), comunicação entre componentes entre outros conhecimentos básicos sobre o 
framework.</p>

<p><img src="https://cdn-images-1.medium.com/max/2000/1*oT0-Tqda8sGMdKH0SHPbOw.jpeg" alt="" /></p>
<div class="img-legend">Nate Grant em Unsplash</div>

<p><br /></p>

<h4 id="contexto-e-definição-do-exemplo"><strong>Contexto e definição do exemplo</strong></h4>
<p>Imaginamos uma aplicação onde o usuário inicia um fluxo de cancelamento de uma conta de usuário em três etapas, certo. 
Então temos uma tela inicial, a primeira tela do fluxo de cancelamento, nessa primeira tela desse fluxo o usuário 
adicionará algumas informações, e também existirá um botão para a próxima tela, na segunda telá novamente o usuário irá 
selecionar algumas opções e novamente um botão para a última tela, na ultima tela o usuário irá confirmar o cancelamento.</p>

<p><br /></p>

<p>Com esse exemplo pensamos… Fácil! Podemos criar três seções na página e uma variável de controle para exibir cada 
tela no seu momento oportuno certo? Certo! podemos sim, vamos ver como fica? Let’s code</p>

<p>Irei criar um projeto utilizando o vue cli.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vue create steps
</code></pre></div></div>

<p><br /></p>

<p>Eu criei um projeto e um “componente” com três ‘seções’, cada uma representando uma etapa do fluxo descrito. Cada etapa 
tem um botão que passa para a próxima tela do fluxo, passando o nome da próxima tela para um método que atribui para uma 
variável de controle, utilizando <code class="language-plaintext highlighter-rouge">v-if</code> nas seções o vue decide qual tela mostrar.</p>

<div class="language-vue highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;</span><span class="k">template</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"page-container"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span>
      <span class="na">v-if=</span><span class="s">"step === 'firstStep'"</span>
      <span class="na">class=</span><span class="s">"form-container first-step"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;form</span> <span class="na">class=</span><span class="s">"form"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">v-model=</span><span class="s">"form.email"</span> <span class="na">class=</span><span class="s">"input email"</span> <span class="na">id=</span><span class="s">"email"</span> <span class="na">placeholder=</span><span class="s">"E-mail"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">v-model=</span><span class="s">"form.name"</span> <span class="na">class=</span><span class="s">"input name"</span> <span class="na">id=</span><span class="s">"name"</span> <span class="na">placeholder=</span><span class="s">"Name"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;/form&gt;</span>
      <span class="nt">&lt;button</span> <span class="err">@</span><span class="na">click=</span><span class="s">"nextStep('secondStep')"</span><span class="nt">&gt;</span>Next<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;/div&gt;</span>

    <span class="nt">&lt;div</span>
      <span class="na">v-if=</span><span class="s">"step === 'secondStep'"</span>
      <span class="na">class=</span><span class="s">"form-container second-step"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;form</span> <span class="na">class=</span><span class="s">"form"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">v-model=</span><span class="s">"form.user"</span> <span class="na">class=</span><span class="s">"input user"</span> <span class="na">id=</span><span class="s">"user"</span> <span class="na">placeholder=</span><span class="s">"User"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">v-model=</span><span class="s">"form.codeid"</span> <span class="na">class=</span><span class="s">"input codeid"</span> <span class="na">id=</span><span class="s">"codeid"</span> <span class="na">placeholder=</span><span class="s">"Code Id"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;/form&gt;</span>
      <span class="nt">&lt;button</span> <span class="err">@</span><span class="na">click=</span><span class="s">"nextStep('thirdStep')"</span><span class="nt">&gt;</span>Next<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;/div&gt;</span>

    <span class="nt">&lt;div</span>
      <span class="na">v-if=</span><span class="s">"step === 'thirdStep'"</span>
      <span class="na">class=</span><span class="s">"form-container third-step"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;p&gt;</span>
        Você tem certeza que quer cancelar sua conta?
      <span class="nt">&lt;/p&gt;</span>
      <span class="nt">&lt;button&gt;</span>Confirmar<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/</span><span class="k">template</span><span class="nt">&gt;</span>

<span class="nt">&lt;</span><span class="k">script</span><span class="nt">&gt;</span>
<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Steps</span><span class="dl">'</span><span class="p">,</span>

  <span class="nx">data</span> <span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">{</span>
      <span class="na">form</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">email</span><span class="p">:</span> <span class="dl">''</span><span class="p">,</span>
        <span class="na">name</span><span class="p">:</span> <span class="dl">''</span><span class="p">,</span>
        <span class="na">user</span><span class="p">:</span> <span class="dl">''</span><span class="p">,</span>
        <span class="na">codeid</span><span class="p">:</span> <span class="dl">''</span>
      <span class="p">},</span>
      <span class="na">step</span><span class="p">:</span> <span class="dl">'</span><span class="s1">firstStep</span><span class="dl">'</span>
    <span class="p">}</span>
  <span class="p">},</span>

  <span class="na">methods</span><span class="p">:</span> <span class="p">{</span>
    <span class="nx">nextStep</span><span class="p">(</span><span class="nx">step</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">step</span> <span class="o">=</span> <span class="nx">step</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="nt">&lt;/</span><span class="k">script</span><span class="nt">&gt;</span>
</code></pre></div></div>

<p><br />
Funciona, mas podemos perceber que foge da ideia do vue de separar em componentes, temos as três telas em um aquivo só, 
além de, caso precise de uma lógica mais complexa iriam também ficar no mesmo arquivo.<br />
Com o Vue.js, podemos utilizar componentes dinâmicos, usando <code class="language-plaintext highlighter-rouge">&lt;component is=""&gt;</code> podemos definir qual componente será 
renderizado pelo seu nome, vamos refatorar o código acima separando em componentes e utilizando essa funcionalidade.</p>

<p><br /></p>

<p>Primeiramente vamos criar um componente para cada tela do fluxo de cancelamento, <code class="language-plaintext highlighter-rouge">FirstStep.vue</code>, <code class="language-plaintext highlighter-rouge">SecondStep.vue</code> e 
<code class="language-plaintext highlighter-rouge">ThirdStep.vue</code>.</p>

<p><code class="language-plaintext highlighter-rouge">FirstStep.vue</code></p>
<div class="language-vue highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;</span><span class="k">template</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span>
    <span class="na">class=</span><span class="s">"form-container first-step"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;form</span> <span class="na">class=</span><span class="s">"form"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">v-model=</span><span class="s">"form.email"</span> <span class="na">class=</span><span class="s">"input email"</span> <span class="na">id=</span><span class="s">"email"</span> <span class="na">placeholder=</span><span class="s">"E-mail"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">v-model=</span><span class="s">"form.name"</span> <span class="na">class=</span><span class="s">"input name"</span> <span class="na">id=</span><span class="s">"name"</span> <span class="na">placeholder=</span><span class="s">"Name"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/form&gt;</span>
    <span class="nt">&lt;button</span> <span class="err">@</span><span class="na">click=</span><span class="s">"nextStep()"</span><span class="nt">&gt;</span>Next<span class="nt">&lt;/button&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/</span><span class="k">template</span><span class="nt">&gt;</span>

<span class="nt">&lt;</span><span class="k">script</span><span class="nt">&gt;</span>
  <span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">first-step</span><span class="dl">"</span><span class="p">,</span>

    <span class="na">props</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">form</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">type</span><span class="p">:</span> <span class="nb">Object</span><span class="p">,</span>
      <span class="p">}</span>
    <span class="p">},</span>

    <span class="na">methods</span><span class="p">:</span> <span class="p">{</span>
      <span class="nx">nextStep</span> <span class="p">()</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="dl">'</span><span class="s1">nextStep</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span><span class="na">step</span><span class="p">:</span> <span class="dl">'</span><span class="s1">second-step</span><span class="dl">'</span><span class="p">,</span> <span class="na">form</span><span class="p">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">form</span><span class="p">})</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="nt">&lt;/</span><span class="k">script</span><span class="nt">&gt;</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">SecondStep.vue</code></p>
<div class="language-vue highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;</span><span class="k">template</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span>
    <span class="na">class=</span><span class="s">"form-container second-step"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;form</span> <span class="na">class=</span><span class="s">"form"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">v-model=</span><span class="s">"form.user"</span> <span class="na">class=</span><span class="s">"input user"</span> <span class="na">id=</span><span class="s">"user"</span> <span class="na">placeholder=</span><span class="s">"User"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">v-model=</span><span class="s">"form.codeid"</span> <span class="na">class=</span><span class="s">"input codeid"</span> <span class="na">id=</span><span class="s">"codeid"</span> <span class="na">placeholder=</span><span class="s">"Code Id"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/form&gt;</span>
    <span class="nt">&lt;button</span> <span class="err">@</span><span class="na">click=</span><span class="s">"nextStep()"</span><span class="nt">&gt;</span>Next<span class="nt">&lt;/button&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/</span><span class="k">template</span><span class="nt">&gt;</span>

<span class="nt">&lt;</span><span class="k">script</span><span class="nt">&gt;</span>
  <span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">second-step</span><span class="dl">"</span><span class="p">,</span>

    <span class="na">props</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">form</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">type</span><span class="p">:</span> <span class="nb">Object</span><span class="p">,</span>
      <span class="p">}</span>
    <span class="p">},</span>

    <span class="na">methods</span><span class="p">:</span> <span class="p">{</span>
      <span class="nx">nextStep</span> <span class="p">()</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="dl">'</span><span class="s1">nextStep</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span><span class="na">step</span><span class="p">:</span> <span class="dl">'</span><span class="s1">third-step</span><span class="dl">'</span><span class="p">,</span> <span class="na">form</span><span class="p">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">form</span><span class="p">})</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="nt">&lt;/</span><span class="k">script</span><span class="nt">&gt;</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">ThirdStep.vue</code></p>
<div class="language-vue highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;</span><span class="k">template</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span>
    <span class="na">class=</span><span class="s">"form-container third-step"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;p&gt;</span>
      Você tem certeza que quer cancelar sua conta?
    <span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;button</span> <span class="err">@</span><span class="na">click=</span><span class="s">"finish"</span><span class="nt">&gt;</span>Confirmar<span class="nt">&lt;/button&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/</span><span class="k">template</span><span class="nt">&gt;</span>

<span class="nt">&lt;</span><span class="k">script</span><span class="nt">&gt;</span>
  <span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">third-step</span><span class="dl">"</span><span class="p">,</span>

    <span class="na">props</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">form</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">type</span><span class="p">:</span> <span class="nb">Object</span><span class="p">,</span>
      <span class="p">}</span>
    <span class="p">},</span>

    <span class="na">methods</span><span class="p">:</span> <span class="p">{</span>
      <span class="nx">finish</span> <span class="p">()</span> <span class="p">{</span>
        <span class="nx">alert</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">form</span><span class="p">))</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="nt">&lt;/</span><span class="k">script</span><span class="nt">&gt;</span>
</code></pre></div></div>

<p><br /></p>

<p>Em cada um coloquei o código respectivo de cada etapa, cada um também define uma <code class="language-plaintext highlighter-rouge">props</code> que sera os dados do formulário 
de cada etapa, e um método que será executado quando clicar no botão de próxima tela, o qual emite um evento <code class="language-plaintext highlighter-rouge">nextStep</code> 
com um objeto contendo o nome da próxima tela e os dados do formulário.</p>

<p><br /></p>

<p>Também criamos um componente que será a “base”, onde renderizaremos as telas das etapas de cancelamento.</p>

<p><code class="language-plaintext highlighter-rouge">InitialPage.vue</code></p>
<div class="language-vue highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;</span><span class="k">template</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"page-container"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;component</span>
      <span class="na">:is=</span><span class="s">"step"</span>
      <span class="na">:form=</span><span class="s">"form"</span>
      <span class="err">@</span><span class="na">nextStep=</span><span class="s">"nextStep"</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/</span><span class="k">template</span><span class="nt">&gt;</span>

<span class="nt">&lt;</span><span class="k">script</span><span class="nt">&gt;</span>
  <span class="k">import</span> <span class="nx">FirstStep</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">./FirstStep</span><span class="dl">"</span><span class="p">;</span>
  <span class="k">import</span> <span class="nx">SecondStep</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">./SecondStep</span><span class="dl">"</span><span class="p">;</span>
  <span class="k">import</span> <span class="nx">ThirdStep</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">./ThirdStep</span><span class="dl">"</span><span class="p">;</span>

  <span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">initial-page</span><span class="dl">"</span><span class="p">,</span>

    <span class="na">components</span><span class="p">:</span> <span class="p">{</span>
      <span class="dl">'</span><span class="s1">first-step</span><span class="dl">'</span><span class="p">:</span> <span class="nx">FirstStep</span><span class="p">,</span>
      <span class="dl">'</span><span class="s1">second-step</span><span class="dl">'</span><span class="p">:</span> <span class="nx">SecondStep</span><span class="p">,</span>
      <span class="dl">'</span><span class="s1">third-step</span><span class="dl">'</span><span class="p">:</span> <span class="nx">ThirdStep</span>
    <span class="p">},</span>

    <span class="nx">data</span><span class="p">()</span> <span class="p">{</span>
      <span class="k">return</span> <span class="p">{</span>
        <span class="na">step</span><span class="p">:</span> <span class="dl">'</span><span class="s1">first-step</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">form</span><span class="p">:</span> <span class="p">{</span>
          <span class="na">email</span><span class="p">:</span> <span class="dl">''</span><span class="p">,</span>
          <span class="na">name</span><span class="p">:</span> <span class="dl">''</span><span class="p">,</span>
          <span class="na">user</span><span class="p">:</span> <span class="dl">''</span><span class="p">,</span>
          <span class="na">codeid</span><span class="p">:</span> <span class="dl">''</span>
        <span class="p">}</span>
      <span class="p">}</span>
    <span class="p">},</span>

    <span class="na">methods</span><span class="p">:</span> <span class="p">{</span>
      <span class="nx">nextStep</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">form</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">form</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">step</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">step</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="nt">&lt;/</span><span class="k">script</span><span class="nt">&gt;</span>
</code></pre></div></div>

<p>Aqui importamos todos os componentes das telas, utilizamos <code class="language-plaintext highlighter-rouge">&lt;component :is="" /&gt;</code> passando o nome de cada tela que é 
armazenado em uma variável, também colocamos um <code class="language-plaintext highlighter-rouge">listener</code> para o evento <code class="language-plaintext highlighter-rouge">nextStep</code> que é emitido por cada tela do 
fluxo de cancelamento, quando uma tela emite esse evento, é executado o método <code class="language-plaintext highlighter-rouge">nextStep</code> que recebe os dados enviados 
pela etapa atual, atribui os dados do formulário para a variável form que será passado como prop para a próxima tela e 
o nome da tela recebido que ser renderizado pelo <code class="language-plaintext highlighter-rouge">&lt;component is=""</code>. Desta forma cada tela sabe qual a próxima tela, 
evitamos utilizar condicionais e criamos componentes separados mantendo a ideia do framework.</p>

<p><br />
<br /></p>

<h4 id="conclusão"><strong>Conclusão</strong></h4>
<p>Essa é uma funcionalidade bem bacana do VueJS e pode ser bastante útil e poderosa, só quis mostrar um caso de uso possível 
dessa feature :P <br />
Comentem se gostaram, compartilhem se conhecem alguém a quem possa ser útil este texto e até o próximo.</p>

<p><br /></p>

<h5 id="referências"><strong>Referências:</strong></h5>
<ul>
  <li>https://br.vuejs.org/v2/guide/components-dynamic-async.html</li>
</ul>
:ET